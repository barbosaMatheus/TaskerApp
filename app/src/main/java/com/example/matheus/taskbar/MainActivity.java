package com.example.matheus.taskbar;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

//NOTE: ALL GRAPHICS GENERATED BY ME ON FLAMINGTEXT.COM, GIMP, OR ACQUIRED FROM PIXABAY.COM

public class MainActivity extends AppCompatActivity {

    public final String help_message = "Welcome, and thank you for downloading Tasker!a" +
            "\n\nIMPORTANT: please read the help text on each page at least once. " +
            "Some buttons have multiple functions which are explained in the help text." +
            "To set an alarm go to the Alarm/Reminder screen by clicking \"REMINDER\" on the main " +
            "screen.\n\nTo manage your tasks go to the tasks screen by clicking \"TASKS\"" +
            " on the main screen.\n\nTo use the shopping list feature, simply click " +
            "\"SHOPPING\" on the main screen.\n\nThe left side of the screen contains two" +
            " lists which can be renamed by holding down on their respective buttons" +
            "\n\nEach screen also has additional help" +
            " that can be accessed by clicking the \"?\" button on screen.\n\nFor questions/" +
            "issues please e-mail Matheus (asaph@okstate.edu).";

    public String app_name_str = "Tasker";
    public String custom_list1_label;
    public String custom_list2_label;
    public Button list1;
    public Button list2;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        getSupportActionBar( ).setTitle( "Main" );

        //initialize members
        SharedPreferences sp_file = getPreferences( Context.MODE_PRIVATE );     //make shared preferences object
        custom_list1_label = sp_file.getString( "label1", "My List 1" );
        custom_list2_label = sp_file.getString( "label2", "My List 2");

        //setup long click listeners to change
        //the name of the custom lists
        list1 = ( Button ) this.findViewById( R.id.list1_button );
        list1.setText( custom_list1_label );
        list1.setLongClickable( true );
        list1.setOnLongClickListener( new View.OnLongClickListener( ) {
            @Override
            public boolean onLongClick( View view ) {
                show_edit_pop_up( 1 );
                update_storage( );
                return true;
            }
        } );

        list2 = ( Button ) this.findViewById( R.id.list2_button );
        list2.setLongClickable( true );
        list2.setOnLongClickListener( new View.OnLongClickListener( ) {
            @Override
            public boolean onLongClick(View view) {
                show_edit_pop_up( 2 );
                update_storage( );
                return true;
            }
        } );
        list2.setText( custom_list2_label );
    }

    //shows a pop up to edit button text
    public void show_edit_pop_up( final int button ) {
        final EditText edit = new EditText( this );
        if( button == 1 ) edit.setText( list1.getText( ).toString( ) );
        else if( button == 2 ) edit.setText( list2.getText( ).toString( ) );
        AlertDialog.Builder builder = new AlertDialog.Builder( this );
        builder.setTitle( "Edit List Name" );
        builder.setIcon( R.drawable.logo );
        builder.setMessage( "Edit the list name below and press \"SAVE\"" );
        builder.setView( edit );
        builder.setPositiveButton( "SAVE", new DialogInterface.OnClickListener( ) {
            @Override
            public void onClick( DialogInterface dialogInterface, int i ) {
                final String text = edit.getText( ).toString( );
                if( text.length( ) > 20 ) {
                    Toast.makeText( getApplicationContext( ),
                            "20 characters max", Toast.LENGTH_SHORT ).show( );
                    return;
                }
                if( button == 1 ) {
                    list1.setText( text );
                    custom_list1_label = text;
                }
                else if( button == 2 ) {
                    list2.setText( text );
                    custom_list2_label = text;
                }
            }
        } );
        builder.setNegativeButton( "CANCEL", null );
        final AlertDialog alert = builder.create( );
        //forces keyboard to come up
        alert.getWindow( ).setSoftInputMode( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE );
        alert.setCanceledOnTouchOutside( false );  //prevents user from "touching out"  of the view

        //show pop-up
        alert.show( );
    }

    //set as the onClick listener for all
    //buttons in this activity
    public void button_click_listener( View view ) {
        if( view == this.findViewById( R.id.tasks_button ) ) { //if tasks is pressed
            Intent intent = new Intent( this, Tasks.class );   //create intent object
            startActivity( intent );                           //go to tasks activity
        }
        else if( view == this.findViewById( R.id.help_button ) ) { //if help is pressed
            show_help_pop( );
        }
        else if( view == this.findViewById( R.id.slist_button ) ) { //if shopping is pressed
            Intent intent = new Intent( getApplicationContext( ), ShoppingListActivity.class );
            startActivity( intent );
        }
        else if( view == this.findViewById( R.id.alarm_button ) ) { //if alarm is pressed
            //Toast.makeText( getApplicationContext( ), "alarm feature not implemented yet", Toast.LENGTH_SHORT ).show( );
            Intent intent = new Intent( this, Alarm.class );
            startActivity( intent );
        }
        else if( view == this.findViewById( R.id.list1_button ) ) { //if custom list 1 is pressed
            Intent intent = new Intent( this, CustomListActivity.class );
            final String title = ( ( Button ) this.findViewById( R.id.list1_button ) ).getText( ).toString( );
            intent.putExtra( "title", title );
            intent.putExtra( "index", 1 );
            startActivity( intent );
        }
        else if( view == this.findViewById( R.id.list2_button ) ) { //if custom list 1 is pressed
            Intent intent = new Intent( this, CustomListActivity.class );
            final String title = ( ( Button ) this.findViewById( R.id.list2_button ) ).getText( ).toString( );
            intent.putExtra( "title", title );
            intent.putExtra( "index", 2 );
            startActivity( intent );
        }
        else if( view == this.findViewById( R.id.more_button ) ) { //if more is pressed
            Intent intent = new Intent( this, MoreActivity.class );
            startActivity( intent );
        }
    }

    //shows a pop-up with some help information
    public void show_help_pop( ) {
        //create and set up dialog box object
        AlertDialog.Builder pop_up = new AlertDialog.Builder( this );
        pop_up.setTitle( app_name_str + " Help" );
        pop_up.setIcon( R.drawable.logo );
        pop_up.setMessage( help_message );

        //set up buttons for dialog box
        pop_up.setPositiveButton( "OK", null );

        //show pop-up
        pop_up.show( );
    }

    //updates persistent data
    //with temporary data
    public void update_storage( ) {
        SharedPreferences sp_file = getPreferences( Context.MODE_PRIVATE );     //make shared preferences object
        SharedPreferences.Editor editor = sp_file.edit( );                      //make editor object
        editor.putString( "label1", custom_list1_label );
        editor.putString( "label2", custom_list2_label );
        editor.apply( );
    }

    @Override
    public void onBackPressed( ) {
        super.onBackPressed( );
        update_storage( );
        finishAffinity( );
    }

    @Override
    public void onStop( ) {
        super.onStop( );
        update_storage( );
    }
}

